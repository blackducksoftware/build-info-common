/*******************************************************************************
 * Black Duck Software Suite SDK
 * Copyright (C) 2016 Black Duck Software, Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *******************************************************************************/
package com.blackducksoftware.integration.build;

public class VulnerabilityCounts {
	private int low = 0;
	private int medium = 0;
	private int high = 0;

	public void setLow(final int low) throws IllegalArgumentException {
		if (low < 0) {
			throw new IllegalArgumentException("Count can't be less then zero");
		}
		this.low = low;
	}

	public void setMedium(final int medium) throws IllegalArgumentException {
		if (medium < 0) {
			throw new IllegalArgumentException("Count can't be less then zero");
		}
		this.medium = medium;
	}

	public void setHigh(final int high) throws IllegalArgumentException {
		if (high < 0) {
			throw new IllegalArgumentException("Count can't be less then zero");
		}
		this.high = high;
	}

	public int getLow() {
		return low;
	}

	@Deprecated
	public void setLow(final String low) {
		this.low = Integer.parseInt(low);
	}

	public int getMedium() {
		return medium;
	}

	@Deprecated
	public void setMedium(final String medium) {
		this.medium = Integer.parseInt(medium);
	}

	public int getHigh() {
		return high;
	}

	@Deprecated
	public void setHigh(final String high) {
		this.high = Integer.parseInt(high);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + high;
		result = prime * result + low;
		result = prime * result + medium;
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		final VulnerabilityCounts other = (VulnerabilityCounts) obj;
		if (high != other.high) {
			return false;
		}
		if (low != other.low) {
			return false;
		}
		if (medium != other.medium) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		final StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append("VulnerabilityCounts [low=");
		stringBuilder.append(low);
		stringBuilder.append(", medium=");
		stringBuilder.append(medium);
		stringBuilder.append(", high=");
		stringBuilder.append(high);
		stringBuilder.append("]");
		return stringBuilder.toString();
	}

}
